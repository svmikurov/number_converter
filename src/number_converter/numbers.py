"""Mapping of number with it text representation."""

from .types import Case, Gender

prime_numbers: dict[int, Case] = {
    1: Case(
        Gender('один', 'одна', 'одно'),
        Gender('одного', 'одной', 'одного'),
        Gender('одному', 'одной', 'одному'),
        Gender('один', 'одну', 'одно'),
        Gender('одним', 'одной', 'одним'),
        Gender('одном', 'одной', 'одном'),
    ),
    2: Case(
        Gender('два', 'две', 'два'),
        Gender('двух', 'двух', 'двух'),
        Gender('двум', 'двум', 'двум'),
        Gender('два', 'две', 'два'),
        Gender('двумя', 'двумя', 'двумя'),
        Gender('двух', 'двух', 'двух'),
    ),
    3: Case(
        Gender('три', 'три', 'три'),
        Gender('трёх', 'трёх', 'трёх'),
        Gender('трём', 'трём', 'трём'),
        Gender('три', 'три', 'три'),
        Gender('тремя', 'тремя', 'тремя'),
        Gender('трёх', 'трёх', 'трёх'),
    ),
    4: Case(
        Gender('четыре', 'четыре', 'четыре'),
        Gender('четырёх', 'четырёх', 'четырёх'),
        Gender('четырём', 'четырём', 'четырём'),
        Gender('четыре', 'четыре', 'четыре'),
        Gender('четырьмя', 'четырьмя', 'четырьмя'),
        Gender('четырёх', 'четырёх', 'четырёх'),
    ),
    5: Case(
        Gender('пять', 'пять', 'пять'),
        Gender('пяти', 'пяти', 'пяти'),
        Gender('пяти', 'пяти', 'пяти'),
        Gender('пять', 'пять', 'пять'),
        Gender('пятью', 'пятью', 'пятью'),
        Gender('пяти', 'пяти', 'пяти'),
    ),
    6: Case(
        Gender('шесть', 'шесть', 'шесть'),
        Gender('шести', 'шести', 'шести'),
        Gender('шести', 'шести', 'шести'),
        Gender('шесть', 'шесть', 'шесть'),
        Gender('шестью', 'шестью', 'шестью'),
        Gender('шести', 'шести', 'шести'),
    ),
    7: Case(
        Gender('семь', 'семь', 'семь'),
        Gender('семи', 'семи', 'семи'),
        Gender('семи', 'семи', 'семи'),
        Gender('семь', 'семь', 'семь'),
        Gender('семью', 'семью', 'семью'),
        Gender('семи', 'семи', 'семи'),
    ),
    8: Case(
        Gender('восемь', 'восемь', 'восемь'),
        Gender('восьми', 'восьми', 'восьми'),
        Gender('восьми', 'восьми', 'восьми'),
        Gender('восемь', 'восемь', 'восемь'),
        Gender('восьмью', 'восьмью', 'восьмью'),
        Gender('восьми', 'восьми', 'восьми'),
    ),
    9: Case(
        Gender('девять', 'девять', 'девять'),
        Gender('девяти', 'девяти', 'девяти'),
        Gender('девяти', 'девяти', 'девяти'),
        Gender('девять', 'девять', 'девять'),
        Gender('девятью', 'девятью', 'девятью'),
        Gender('девяти', 'девяти', 'девяти'),
    ),
    0: Case(
        Gender('ноль', 'ноль', 'ноль'),
        Gender('ноля', 'ноля', 'ноля'),
        Gender('нолю', 'нолю', 'нолю'),
        Gender('ноль', 'ноль', 'ноль'),
        Gender('нолем', 'нолем', 'нолем'),
        Gender('ноле', 'ноле', 'ноле'),
    ),
}
